.question-voting
  h3.rating = question.rating
  p.upvote-link class=('conceal' unless can?(:vote, question))
    = link_to 'Upvote', upvote_question_url(question), remote: true, method: :patch
  p.downvote-link class=('conceal' unless can?(:vote, question))
    = link_to 'Downvote', downvote_question_url(question), remote: true, method: :patch
  p.recall-vote class=('conceal' unless can?(:recall_vote, question))
    = link_to 'Recall vote', recall_vote_question_url(question), remote: true, method: :patch
.show-question-block
  h1.page-header == question.title
  p.question-body == question.body
  p.attachments Attachments:
  ul
    - question.attachments.each do |a|
      li = link_to a.file.identifier, a.file.url
  - if can?(:destroy, question)
    span.delete-link = link_to 'Delete question', question, method: :delete
  - if can?(:update, question)
    |  
    span.edit-link = link_to 'Edit question', {}, class: 'edit-question-link'
  span.pull-right.user-info
    | asked 
    = time_ago_in_words(question.created_at)
    |  ago by 
    = question.user.name
  - if can?(:subscribe, question)
    .subscription 
      - if can?(:subscribe_to, question)
        = link_to "Subscribe to new answers", question_new_answer_subscriptions_path(question), method: :post, remote: true
      - else
        span Already subscribed to this question
        
p
  .edit-question-form.conceal
    = form_for question, remote: true do |f|
      .field.form-group
        = f.label :title
        = f.text_field :title, class: 'form-control'
      .field.form-group
        = f.label :body, 'Question'
        = f.text_area :body, class: 'form-control'
      .form-group
        = f.fields_for :attachments do |field|
          = render 'attachment_fields', f: field
        p.links
          = link_to_add_association "Moar files!", f, :attachments
      .form-group
        = f.submit 'Save changes', class: 'btn btn-primary'
        = f.button 'Discard', class: 'question-discard', type: 'button'
        